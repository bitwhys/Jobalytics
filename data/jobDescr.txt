Did you know that on average recruiters spend JUST 6 seconds looking at your resume?

As university students, we understand the challenge of creating a resume and gaining objective insight on what works and what doesn't BEFORE it's too late. Resumes are often the first time a recruiter is made aware of your interest in the position, so it needs to be perfect. We set out to make a project that runs standalone and gives users the potential to evaluate their resumes from the lens of an objective, learning computer.

Jobalytics takes a file input in the form of a PDF (Adobe Acrobat document) from the user in a drag-and-drop UI. Then, the user can perform a variety of analyses on the resume processed. The features currently implemented include Job Match (Paste the job description of the job you want to apply for, and find how well your resume matches what they're looking for!), Radials (We'll tell you your Myers Briggs results from your resume!), Persona (What type of team worker are you? Our analysis on your experiences will show you.), What Works (Find out the most successful elements of your resume!), Improve Yourself (Discover the most glaring flaws in your resume, from length to formatting), and Frequent Words (Reveal the most commonly repeated words in your resume so you can ensure you get your message across properly.)

The web front-end was built with HTML, CSS and JavaScript/JQuery with some formatting help from Bootstrap.

Node.js was the server side language running on a Express. JS server.

Wolfram One/Mathematica was used with Indico for the analytical machinel earning and NLP back-end of the program, executed in Python, which was then ported into Node with python shell.

Trying to coordinate separate development of the front-end (web), analytical back-end (machine learning in Python), file I/O, and node.js server all together.

Trying to produce a working link between Wolfram Alpha's frame output and the existing code.

Effectively delegating work and determining a process flow both from an analysis perspective and UI perspective.

Completing the project very quickly and learning complicated process flows between programming languages.

How to move data between 5 different programming languages.

Continued development and refinement of the existing features of the product.

Building and making available reference libraries of results for other (anonymized) resumes in our database to understand keys to success and common mistakes.